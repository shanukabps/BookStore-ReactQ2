[{"D:\\react\\hsenid\\bookstrore-project-01\\src\\index.js":"1","D:\\react\\hsenid\\bookstrore-project-01\\src\\App.js":"2","D:\\react\\hsenid\\bookstrore-project-01\\src\\reportWebVitals.js":"3","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Navbar\\Navbar.js":"4","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Home\\Home.js":"5","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Footer\\Footer.js":"6","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\notfound\\notfound.js":"7","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\GetListName\\GetListName.js":"8","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Books\\CategoryBook.js":"9","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\ShowCategoryListbooks\\ShowCategoryListbooks.js":"10","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Books\\Book.js":"11","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Books\\TopBook.js":"12","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\GetFiveCategoryBooks\\GetFiveCategoryBooks.js":"13","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\GetTopSellBook\\GetTopSellBooks.js":"14"},{"size":545,"mtime":1607746422767,"results":"15","hashOfConfig":"16"},{"size":1282,"mtime":1607845810883,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1105,"mtime":1607848861532,"results":"19","hashOfConfig":"16"},{"size":7176,"mtime":1607849971614,"results":"20","hashOfConfig":"16"},{"size":2273,"mtime":1607845882372,"results":"21","hashOfConfig":"16"},{"size":347,"mtime":1607696867228,"results":"22","hashOfConfig":"16"},{"size":389,"mtime":1607845540380,"results":"23","hashOfConfig":"16"},{"size":2187,"mtime":1607845521511,"results":"24","hashOfConfig":"16"},{"size":2875,"mtime":1607845525392,"results":"25","hashOfConfig":"16"},{"size":3218,"mtime":1607845519821,"results":"26","hashOfConfig":"16"},{"size":1808,"mtime":1607845523230,"results":"27","hashOfConfig":"16"},{"size":2423,"mtime":1607845543687,"results":"28","hashOfConfig":"16"},{"size":1892,"mtime":1607845536988,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1j5b4tu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\react\\hsenid\\bookstrore-project-01\\src\\index.js",[],["61","62"],"D:\\react\\hsenid\\bookstrore-project-01\\src\\App.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\reportWebVitals.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Navbar\\Navbar.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Home\\Home.js",["63"],"/**\r\n * This component Get top 5 books for all the Best Sellers lists for specified date dhoe top ranked book in every category\r\n * and user can search book from top 5 books for all the Best Sellers lists.\r\n * And user can goto specific book category using @deropdown menu button\r\n *\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport GetListName from \"../GetListName/GetListName\";\r\nimport GetTopSellBooks from \"../GetTopSellBook/GetTopSellBooks\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport \"./dropdownMenu.css\";\r\n\r\n/**\r\n * This Home functional component show top ranked book from each list user can search book from from top 5 books for all the Best Sellers lists\r\n *\r\n * @param {Array} bookcategory -  top 5 books for all the Best Sellers lists\r\n * @param {String} search - user search input\r\n * @param {searchBook} -searched book respect to @param search\r\n * @param {Array} topbooks -All the boo in top 5 books for all the Best Sellers lists\r\n *\r\n *\r\n */\r\n\r\nfunction Home() {\r\n  const [bookcategory, setbookCatogory] = useState(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchBook, setSearchBook] = useState([]);\r\n  let topbooks = [];\r\n\r\n  /**\r\n   * checked the session storage \"bookstore \" if it is null ,call @function fetchbookCatogory otherwise get data from session storage \"bookstore \" and set it in to bookCategory\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"bookstore\") === null) {\r\n      fetchbookCatogory();\r\n    } else {\r\n      setbookCatogory(JSON.parse(sessionStorage.getItem(\"bookstore\")));\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   *  @param topbooks stored session storage\r\n   *\r\n   */\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"topbooks\", JSON.stringify(topbooks));\r\n  }, [bookcategory]);\r\n\r\n  /**\r\n   * checked the search is available or not ,if search available ,filter the search book title  from top 5 books for all the Best Sellers lists\r\n   * get the book and set that book in to @param searchBook otherwise it set empty array\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      let searchbook = JSON.parse(sessionStorage.getItem(\"topbooks\")).filter(\r\n        (book) => {\r\n          return book.title.toLowerCase().includes(search);\r\n        }\r\n      );\r\n      setSearchBook(searchbook);\r\n    } else {\r\n      setSearchBook([]);\r\n    }\r\n  }, [search]);\r\n\r\n  // ap - api-Key\r\n  const ap = \"psLOCIWUdwAFRtYu7cVMWgXXB6FdAmGx\";\r\n\r\n  /**\r\n   * Fetched data from api (get overview books(top 5 books for all the Best Sellers lists))\r\n   * store that list in session storage and set that data to bookCategory\r\n   */\r\n\r\n  const fetchbookCatogory = async () => {\r\n    await axios\r\n      .get(\r\n        `https://api.nytimes.com/svc/books/v3/lists/overview.json?&api-key=${ap}`\r\n      )\r\n\r\n      .then((response) => {\r\n        /**\r\n         * response.data conver to JSON and store it in session storage\r\n         */\r\n        sessionStorage.setItem(\r\n          \"bookstore\",\r\n          JSON.stringify(response.data.results.lists)\r\n        );\r\n        setbookCatogory(response.data.results.lists);\r\n\r\n        /**\r\n         * get leases bookcategory sored in session and that text dta convert to json and set it to bookcategory\r\n         */\r\n        // setbookCatogory(JSON.parse(sessionStorage.getItem(\"bookstore\")));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  /**\r\n   * check bookcategory list if it not null then map bookcategory and find the book and store tha book in @param topbooks\r\n   *\r\n   */\r\n\r\n  if (bookcategory !== null) {\r\n    bookcategory.forEach((list) => {\r\n      list.books.forEach((books) => {\r\n        topbooks.push(books);\r\n      });\r\n    });\r\n  }\r\n  console.log(searchBook);\r\n  return (\r\n    // show the input search\r\n    <div className=\"m-3\">\r\n      <div class=\"input-group \">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            <SearchIcon />\r\n          </span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          className=\"form-control\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </div>\r\n      {/* \r\n      show the ropdown menu this menu has list_name (category)\r\n      if search has value displaye searchbook\r\n\r\n      check the bookcategory is availabele or not if availabele \r\n      if avilable shoe rop rank book ein each list\r\n      otherwise show loading\r\n\r\n \r\n */}\r\n      {bookcategory ? (\r\n        <div className=\"d-flex\">\r\n          <div className=\" mr-auto\"></div>\r\n          <div className=\"dropdown\">\r\n            <button className=\"dropbtn\">\r\n              <MenuIcon />\r\n            </button>\r\n            <div className=\"dropdown-content\">\r\n              {bookcategory.map((list, i) => {\r\n                return (\r\n                  <GetListName\r\n                    key={i + \"homelistname\"}\r\n                    list_name={list.list_name}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"wapserch\">\r\n            {searchBook.length !== 0\r\n              ? searchBook.map((listbooks, i) => {\r\n                  return (\r\n                    <div className=\"border-right border-dark mt-1 mr-1\">\r\n                      <GetTopSellBooks\r\n                        key={\"sa\" + i + \"searchbooks\"}\r\n                        author={listbooks.author}\r\n                        book_image={listbooks.book_image}\r\n                        publisher={listbooks.publisher}\r\n                        title={listbooks.title}\r\n                        rank={listbooks.rank_last_week}\r\n                        isbn={listbooks.primary_isbn10}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </div>\r\n          <div className=\" p-2 mt-1 mr-auto\">\r\n            <div>\r\n              <h4 className=\"text-primary mb-5 text-center\">\r\n                TOP BOOKS THE BEST SELLERS LISTS IN LAST WEEKS\r\n              </h4>\r\n            </div>\r\n            <div className=\"wap\">\r\n              {bookcategory.map((list, i) => {\r\n                return list.books.slice(0, 1).map((listbooks) => {\r\n                  return (\r\n                    <GetTopSellBooks\r\n                      key={\"2a\" + i + \"books\"}\r\n                      author={listbooks.author}\r\n                      book_image={listbooks.book_image}\r\n                      publisher={listbooks.publisher}\r\n                      title={listbooks.title}\r\n                      list_name={list.list_name}\r\n                      rank={listbooks.rank_last_week}\r\n                      isbn={listbooks.primary_isbn10}\r\n                    />\r\n                  );\r\n                });\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1 className=\"text-primary text-center\">Loading...</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Footer\\Footer.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\notfound\\notfound.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\GetListName\\GetListName.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Books\\CategoryBook.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\ShowCategoryListbooks\\ShowCategoryListbooks.js",["64"],"/**\r\n *This component show the books in specific list_name(Category)\r\n *we can see more details clicking the item\r\n *\r\n *\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport GetFiveCategoryBooks from \"../GetFiveCategoryBooks/GetFiveCategoryBooks\";\r\n\r\n/**\r\n * show the book in specific category ,fetch the data from api\r\n * store that book in session storage as category-bookstore\r\n * @param {staring} listname -listname specifc book list name that name send from Home component as http parameter\r\n * @param {Array} data - books in specific list name(category)\r\n */\r\n\r\nfunction ShowCategoryListbooks() {\r\n  let { listname } = useParams();\r\n  const [data, setData] = useState(null);\r\n\r\n  /**\r\n   * fetched data from api\r\n   */\r\n\r\n  useEffect(() => {\r\n    fetchdata();\r\n  }, []);\r\n\r\n  //api key\r\n  const ap = \"psLOCIWUdwAFRtYu7cVMWgXXB6FdAmGx\";\r\n\r\n  /**\r\n   *fetch data from according to given list name and store that data in a session storeage as \"category-bookstore\" and set fetched data in to @param data\r\n  \r\n   */\r\n  const fetchdata = async () => {\r\n    await axios\r\n      .get(\r\n        `https://api.nytimes.com/svc/books/v3/lists.json?list=${listname}&&api-key=${ap}`\r\n      )\r\n\r\n      .then((response) => {\r\n        /**\r\n         * response.data conver to JSON and store it in session storage\r\n         */\r\n        sessionStorage.setItem(\r\n          \"category-bookstore\",\r\n          JSON.stringify(response.data.results)\r\n        );\r\n        setData(response.data.results);\r\n\r\n        /**\r\n         * get leases data sored in session and that text dta convert to json and set it to data\r\n         */\r\n        // setdata(JSON.parse(sessionStorage.getItem(\"bookstore\")));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  /**\r\n   * if data is available not null call render GetFiveCategoryBooks show the book otherwise show loading\r\n   *\r\n   *\r\n   */\r\n  return (\r\n    <div>\r\n      {data !== null ? (\r\n        <div>\r\n          <div>\r\n            <h2 className=\"text-center mt-2 mb-5\">{listname}</h2>\r\n          </div>\r\n          <div className=\"wap\">\r\n            {data.map((list, i) => {\r\n              return (\r\n                <GetFiveCategoryBooks\r\n                  key={\"2a\" + i + \"books\"}\r\n                  author={list.book_details[0].author}\r\n                  book_image={list.book_details[0].book_image}\r\n                  publisher={list.book_details[0].publisher}\r\n                  title={list.book_details[0].title}\r\n                  isbn={list.isbns[0].isbn10}\r\n                  rank={list.rank_last_week}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h1 className=\"text-primary text-center\">Loading...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowCategoryListbooks;\r\n","D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Books\\Book.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\Books\\TopBook.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\GetFiveCategoryBooks\\GetFiveCategoryBooks.js",[],"D:\\react\\hsenid\\bookstrore-project-01\\src\\containers\\GetTopSellBook\\GetTopSellBooks.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":51,"column":6,"nodeType":"71","endLine":51,"endColumn":20,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":30,"column":6,"nodeType":"71","endLine":30,"endColumn":8,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'topbooks'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has a missing dependency: 'fetchdata'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [bookcategory, topbooks]",{"range":"83","text":"84"},"Update the dependencies array to be: [fetchdata]",{"range":"85","text":"86"},[1839,1853],"[bookcategory, topbooks]",[863,865],"[fetchdata]"]